@page
@model TravelGalleryWeb.Pages.Admin.SigninModel

@{
    ViewData["Title"] = "Sign in";
}

<h1>Please sign in</h1>

@switch (@Model.Status)
{
    case SigninModel.AuthStatus.Authorized :
        <div class="alert alert-success" role="alert" id="statusMessage">You are logged in as @Model.UserName.</div>
        break;
    case SigninModel.AuthStatus.LoggedOut :
        <div class="alert alert-info" role="alert" id="statusMessage">You are not logged in.</div>
        break;
    case SigninModel.AuthStatus.Error :
        <div class="alert alert-danger" role="alert" id="statusMessage">Incorrect login or password, please try again or contact the site administrator.</div>
        break;
}

<form method="POST">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    
    <div class="form-group">
        <label asp-for="Admin.Login" class="control-label" ></label>
        <input asp-for="Admin.Login" class="form-control" required />
        <span asp-validation-for="Admin.Login" class="text-danger"></span>
    </div>
    
    <div class="form-group">
        <label asp-for="Admin.Password" class="control-label"></label>
        <input type="password" asp-for="Admin.Password" class="form-control" required />
        <span asp-validation-for="Admin.Password" class="text-danger"></span>
    </div>
    
    <div class="form-group">

        @if (@Model.Status == SigninModel.AuthStatus.Authorized)
        {
            <input type="submit" value="Sign in" class="btn btn-primary" disabled/>
        }
        else
        {
            <input type="submit" value="Sign in" class="btn btn-primary"/>
        }
    </div>
</form>